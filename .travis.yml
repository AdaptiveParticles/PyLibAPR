env:
  global:
  - CIBW_BUILD="cp36-* cp37-* cp38-* cp39-*"
  - CIBW_BEFORE_BUILD_LINUX="apt update && apt install -y libtiff5-dev libhdf5-dev"
  - CIBW_ARCHS="auto64"
  - CIBW_MANYLINUX_X86_64_IMAGE="manylinux_2_24"
  - TWINE_USERNAME=__token__
matrix:
  include:
  - language: python
    os: linux
    sudo: required
    python: '3.7'
    services:
    - docker
  - os: windows
    language: shell
    before_install:
      - choco install python --version 3.8.6
      - travis_wait 10 choco install visualstudio2019buildtools --params "--add Microsoft.Component.MSBuild --add Microsoft.VisualStudio.Component.VC.Llvm.Clang --add Microsoft.VisualStudio.Component.VC.Llvm.ClangToolset --add Microsoft.VisualStudio.ComponentGroup.NativeDesktop.Llvm.Clang --add Microsoft.VisualStudio.Component.Windows10SDK.19041	--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.ComponentGroup.UWP.VC.BuildTools"
      - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
      # make sure it's on PATH as 'python3'
      - ln -s /c/Python38/python.exe /c/Python38/python3.exe
      - travis_wait 20 sh travis_windows_setup.sh
      - powershell $vcpkg_path = Resolve-Path "\vcpkg\scripts\buildsystems\vcpkg.cmake"
      - powershell $cmake_arg = "-DCMAKE_TOOLCHAIN_FILE=" + $vcpkg_path
      - powershell $env:EXTRA_CMAKE_ARGS = $cmake_arg
install:
- python3 -m pip install cibuildwheel==1.10.0
script:
- python3 -m cibuildwheel --output-dir wheelhouse
after_success:
- python3 -m pip install twine
- python3 -m twine upload --skip-existing --repository testpypi wheelhouse/*.whl
